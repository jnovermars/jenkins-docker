pipeline {
    agent none
    stages {

        stage('Run: composer update') {
            agent {
                docker { image 'php:7.1-cli-alpine' }
            }
            steps {
                echo 'composer install..'
                sh 'php -v'
            }
        }

        stage('Run: npm install') {

            agent {
                docker {
                    image 'node:9'
                    label 'elect-node'
                    args  '-v ../application:/opt/webapp'
                }
            }

            steps {
                echo 'Show current directory'
                sh 'pwd'
                echo 'npm install'
                sh 'npm install'
            }
        }

        stage('Build: application assets') {
            steps {
                echo 'Building..'
            }
        }

        stage('Create: Artifact') {
            steps {
                echo 'Building..'
            }
        }

        /* Build images and tag with buildnumber*/
        stage('Build: docker images') {

            parallel {
                stage('Build elect-nginx') {
                    steps {
                        echo "Build, elect-nginx"
                    }
                }
                stage('Build elect-php-fpm') {
                    steps {
                        echo "Build, elect-php-fpm"
                    }
                }
                stage('Build elect-php-cli') {
                    steps {
                        echo "Build, elect-php-cli"
                    }
                }
            }

        }

        /* Run Unit / Acceptance / Function tests */
        stage('Run: Tests') {

            parallel {
                stage('Unit test') {
                    steps {
                        echo "test, unit"
                    }
                }
                stage('Acceptance test') {
                    steps {
                        echo "test, acceptance"
                    }
                }
                stage('Function test') {
                    steps {
                        echo "test, function"
                    }
                }
            }

        }

        /* Tag images with :latest */
        stage('Tag: Docker images with :latest') {

            parallel {
                stage('tag elect-nginx') {
                    steps {
                        echo "tag, elect-nginx"
                    }
                }
                stage('tag elect-php-fpm') {
                    steps {
                        echo "tag, elect-php-fpm"
                    }
                }
                stage('tag elect-php-cli') {
                    steps {
                        echo "tag, elect-php-cli"
                    }
                }
            }

        }
    }
}

